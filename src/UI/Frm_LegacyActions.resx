<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="tb_ActionCancelSecs.ToolTip" xml:space="preserve">
    <value>If you have any Cancel actions configured, this is the amount
of time before the Cancel action will be performed if there WAS
a detection but no other since then.  (Note that 
cancel will always be called immediately on false alerts)</value>
  </data>
  <data name="cb_queue_actions.ToolTip" xml:space="preserve">
    <value>This will send any actions to a background thread.  It will allow the main detection routine
to finish without waiting for Telegram, mqtt, etc.   It is possible this will affect how the
telegram cooldown feature works.</value>
  </data>
  <data name="tb_Sounds.ToolTip" xml:space="preserve">
    <value>Play a sound based on detected object.  

Place a common between object names, a semi colon
between object names and the file, and a pipe symbol 
between multiple entries.

Examples:

person ; C:\DADA.WAV | bird ; C:\GOBBLE.WAV
dog, cat, bird ; C:\WOOF.WAV
* ; C:\DEFAULT.WAV</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>33</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wAnqNw3////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8AKaze1Sep3OklptsM////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////ACuv3wwtrt//K6ve/yWm24r///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8AK6/fz0+85/9Muub/Jqfc7SSk2xf///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wArr9//hNPy/1W95/8uqt7/JKTbkP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8ALbLgwHDM7v+D0vL/fs7x/0q2
        5P8kpdvxIqLaF////wD///8A////AP///wA4wufwNsDm+DW95fgzu+T4Mbjj+C+24viG1/P/L7br/0q8
        7P+AzvH/Ubnm/yyo3f8jotqd////AP///wD///8AOsTo6XXa8v+T5vj/keP3/43g9v+K3PX/itv1/4jX
        9P+E0/L/f8/x/3zM8P96ye//SLTj/yOj2vUgntgj////ADvH6TdPzez/mOn5/0rV8/9Fz/H/QMrw/zjC
        7v+J2fT/LrTh/iyx4Pgrrt/4Kaze+Cep3Pglptv4I6Pa6f///wD///8AO8fp9IDh9f+O5vj/Q9Lz/z/N
        8f85x+//jNz1/1jG6v8utOF0////AP///wD///8A////AP///wD///8A////AD3J6lRb1O//mer5/0fW
        9P9C0PL/Pcvw/27V8/9/1/P/SsDn/y+04Ur///8A////AP///wD///8A////AP///wD///8APcrq+ZPp
        +f9y4ff/RdTz/0HO8v88yfD/itz1/3DQ7/89u+T/L7XhI////wD///8A////AP///wD///8A////AD/M
        64Nk2fH/muv6/0jY9P9E0/P/P87x/zrI8P+M3PX/Ysvt/zG44/z///8A////AP///wD///8A////AP//
        /wD///8AP8zr/Zrt+v+Z6/n/l+j5/5Tl+P+R4vf/jt/2/4vb9f9Wx+v/Mbjj8////wD///8A////AP//
        /wD///8A////AEDO7KI/zOv/Psvq/zzJ6f87x+n/OsTo/zjC5/82wOb/Nb3l/zO75P8xuOPh////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A//8AAOf/AADx/wAA8P8AAPg/AAD4HwAAAAcAAAADAACAAQAAgH8AAMA/AADAHwAAwA8AAOAH
        AADgAwAA//8AAA==
</value>
  </data>
</root>